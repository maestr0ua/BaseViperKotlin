buildscript {
    ext.kotlin_version = '1.0.4'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:$kotlin_version"
    }

}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: '../jacoco.gradle'

android {

    final def BOOLEAN = "boolean"
    final def TRUE = "true"
    final def FALSE = "false"
    final def STRING = "String"

    final def SERVER_ENDPOINT = "SERVER_ENDPOINT"
    final def LOGGING_ENABLED = "LOGGING_ENABLED"

    compileSdkVersion 24
    buildToolsVersion "24.0.3"
    defaultConfig {
        applicationId "com.example.akarpenko.basekotlin"
        minSdkVersion 17
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        debug {
            buildConfigField BOOLEAN, LOGGING_ENABLED, TRUE
            buildConfigField STRING, SERVER_ENDPOINT, "\"\""

            minifyEnabled false
            testCoverageEnabled = true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            buildConfigField BOOLEAN, LOGGING_ENABLED, FALSE
            buildConfigField STRING, SERVER_ENDPOINT, "\"\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'

    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }


    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}

ext {
    dagger_version = "2.0.2"
    supportVersion = "24.2.0"
    retrofitVersion = "2.0.0"
    okHttpVersion = "3.2.0"
    espresso_version = '2.2.2'
}

kapt {
    generateStubs = true
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    androidTestCompile "com.android.support.test.espresso:espresso-intents:$espresso_version"
    androidTestCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile "com.android.support:support-annotations:$supportVersion"
    androidTestCompile("com.android.support.test.espresso:espresso-core:$espresso_version", {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    })
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    kaptAndroidTest "com.google.dagger:dagger-compiler:${dagger_version}"

    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.1.4'
    testCompile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"

    testCompile "com.nhaarman:mockito-kotlin:0.11.0"
    kaptTest "com.google.dagger:dagger-compiler:${dagger_version}"

    //support libs
    compile "com.android.support:appcompat-v7:$supportVersion"
    compile "com.android.support:recyclerview-v7:$supportVersion"
    compile "com.android.support:cardview-v7:$supportVersion"
    compile "com.android.support:design:$supportVersion"

    //retrofit
    compile "com.squareup.retrofit2:retrofit:$retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
    //logging
    compile "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    //kotlin
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    //dagger
    compile "com.google.dagger:dagger:${dagger_version}"
    provided 'org.glassfish:javax.annotation:10.0-b28'
    kapt "com.google.dagger:dagger-compiler:${dagger_version}"

    // Rx
    compile('io.reactivex:rxandroid:1.1.0') {
        exclude group: 'io.reactivex', module: 'rxjava'
    }
    compile 'io.reactivex:rxjava:1.1.0'
    compile('com.jakewharton.rxbinding:rxbinding:0.2.0') {
        exclude group: 'io.reactivex', module: 'rxjava'
    }
    compile('com.tbruyelle.rxpermissions:rxpermissions:0.7.0@aar') {
        exclude group: 'io.reactivex', module: 'rxjava'
    }

    //other
    compile 'com.android.support:multidex:1.0.1'
}
